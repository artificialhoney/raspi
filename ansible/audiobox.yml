- name: Audiobox
  hosts: all
  vars:
    pretty_hostname: Audiobox
    raspotify_url: https://github.com/dtcooper/raspotify/releases/download/0.31.4/raspotify_0.31.4.librespot.v0.3.1-34-ge5fd7d6_armhf.deb

  tasks:
    - name: Hostname
      tags:
        - bluetooth
        - airplay
        - spotify
        - snapcast
      become: true
      ansible.builtin.shell:
        cmd: hostnamectl set-hostname --pretty "{{ pretty_hostname }}"
        executable: /bin/bash
      register: output
      changed_when: output.rc != 0
    - name: Update and upgrade
        - bluetooth
        - airplay
        - spotify
        - snapcast
      become: true
      ansible.builtin.apt:
        upgrade: true
        update_cache: true
    - name: Bluetooth
      tags:
        - bluetooth
      become: true
      block:
        - name: Install packages
          ansible.builtin.apt:
            pkg:
              - bluez-tools
              - alsa-base
              - alsa-utils
              - bluez-alsa-utils
              - bluez-tools
            state: present
            update_cache: true
            install_recommends: false
        - name: Config
          ansible.builtin.copy:
            dest: /etc/bluetooth/main.conf
            content: |
              [General]
              Class = 0x200414
              DiscoverableTimeout = 0
              [Policy]
              AutoEnable=true
            mode: "0600"
        - name: Service directory
          ansible.builtin.file:
            path: /etc/systemd/system/bthelper@.service.d
            state: directory
            mode: "0600"
        - name: Service override
          ansible.builtin.copy:
            dest: /etc/systemd/system/bthelper@.service.d/override.conf
            content: |
              [Service]
              Type=oneshot
            mode: "0600"
        - name: Service
          ansible.builtin.copy:
            dest: /etc/systemd/system/bt-agent@.service
            content: |
              [Unit]
              Description=Bluetooth Agent
              Requires=bluetooth.service
              After=bluetooth.service
              [Service]
              ExecStartPre=/usr/bin/bluetoothctl discoverable on
              ExecStartPre=/bin/hciconfig %I piscan
              ExecStartPre=/bin/hciconfig %I sspmode 1
              ExecStart=/usr/bin/bt-agent --capability=NoInputNoOutput
              RestartSec=5
              Restart=always
              KillSignal=SIGUSR1
              [Install]
              WantedBy=multi-user.target
            mode: "0600"
        - name: Enable Service
          ansible.builtin.systemd:
            name: bt-agent@hci0.service
            state: started
        - name: ALSA
          ansible.builtin.lineinfile:
            dest: /lib/modprobe.d/aliases.conf
            regexp: ^options snd-usb-audio index=-2$
            line: "#options snd-usb-audio index=-2"
        - name: Service directory
          ansible.builtin.file:
            path: /etc/systemd/system/bluealsa.service.d
            state: directory
            mode: "0600"
        - name: Service override
          ansible.builtin.copy:
            dest: /etc/systemd/system/bluealsa.service.d/override.conf
            content: |
              [Service]
              ExecStart=
              ExecStart=/usr/bin/bluealsa -i hci0 -p a2dp-sink
              RestartSec=5
              Restart=always
            mode: "0600"
        - name: Service
          ansible.builtin.copy:
            dest: /etc/systemd/system/bluealsa-aplay.service
            content: |
              [Unit]
              Description=BlueALSA aplay
              Requires=bluealsa.service
              After=bluealsa.service sound.target
              [Service]
              Type=simple
              User=root
              ExecStartPre=/bin/sleep 2
              ExecStart=/usr/bin/bluealsa-aplay --pcm-buffer-time=250000 00:00:00:00:00:00
              RestartSec=5
              Restart=always
              [Install]
              WantedBy=multi-user.target
            mode: "0600"
        - name: Enable Service
          ansible.builtin.systemd:
            name: bluealsa-aplay
            state: started
            daemon_reload: true
        - name: Bluetooth udev
          ansible.builtin.copy:
            dest: /usr/local/bin/bluetooth-udev
            content: |
              #!/bin/bash
              if [[ ! $NAME =~ ^\"([0-9A-F]{2}[:-]){5}([0-9A-F]{2})\"$ ]]; then exit 0; fi
              action=$(expr "$ACTION" : "\([a-zA-Z]\+\).*")
              if [ "$action" = "add" ]; then
                  bluetoothctl discoverable off
                  # disconnect wifi to prevent dropouts
                  #ifconfig wlan0 down &
              fi
              if [ "$action" = "remove" ]; then
                  # reenable wifi
                  #ifconfig wlan0 up &
                  bluetoothctl discoverable on
              fi
            mode: "0755"
        - name: Bluetooth udev rules
          ansible.builtin.copy:
            dest: /etc/udev/rules.d/99-bluetooth-udev.rules
            content: |
              SUBSYSTEM=="input", GROUP="input", MODE="0660"
              KERNEL=="input[0-9]*", RUN+="/usr/local/bin/bluetooth-udev"
            mode: "0600"
    - name: AirPlay
      tags:
        - airplay
      become: true
      block:
        - name: Install packages
          ansible.builtin.apt:
            pkg:
              - shairport-sync
            state: present
            update_cache: true
        - name: Config
          ansible.builtin.lineinfile:
            dest: /etc/shairport-sync.conf
            regexp: \tname = ".+"
            line: \tname="{{ pretty_hostname }}"
        - name: Config
          ansible.builtin.lineinfile:
            dest: /etc/shairport-sync.conf
            regexp: \tinterpolation = "auto
            line: \tinterpolation = "basic
        - name: Enable Service
          ansible.builtin.systemd:
            name: shairport-sync
            state: started
    - name: Spotify
      tags:
        - spotify
      become: true
      block:
        - name: Download installation package
          ansible.builtin.get_url:
            url: "{{ raspotify_url }}"
            dest: "/home/{{ ansible_env.USER }}/raspotify.deb"
        - name: Install package
          ansible.builtin.apt:
            deb: "/home/{{ ansible_env.USER }}/raspotify.deb"
        - name: Remove installation package
          ansible.builtin.file:
            path: "/home/{{ ansible_env.USER }}/raspotify.deb"
            state: absent
        - name: Config
          lineinfile:
            dest: /etc/raspotify/conf
            search_string: "{{ item.search_string }}"
            line: "{{ item.line }}"
          loop:
            - {
                search_string: "LIBRESPOT_ENABLE_VOLUME_NORMALISATION=",
                line: "#LIBRESPOT_ENABLE_VOLUME_NORMALISATION=",
              }
            - {
                search_string: '#LIBRESPOT_NAME="Librespot',
                line: 'LIBRESPOT_NAME="{{ pretty_hostname }}',
              }
            - {
                search_string: '#LIBRESPOT_BITRATE="160"',
                line: 'LIBRESPOT_BITRATE="320"',
              }
            - {
                search_string: "#LIBRESPOT_DEVICE_TYPE",
                line: "LIBRESPOT_DEVICE_TYPE:",
              }
            - {
                search_string: '#LIBRESPOT_INITIAL_VOLUME="50"',
                line: 'LIBRESPOT_INITIAL_VOLUME="20"',
              }
            - {
                search_string: '#LIBRESPOT_VOLUME_CTRL="log"',
                line: 'LIBRESPOT_VOLUME_CTRL="cubic"',
              }
        - name: Restart Service
          ansible.builtin.systemd:
            name: raspotify
            state: restarted
    - name: Snapcast
      tags:
        - snapcast
      become: true
      block:
        - name: Install packages
          ansible.builtin.apt:
            pkg:
              - snapclient
            state: present
            update_cache: true
            install_recommends: false
    - name: Disable WiFi power save
      tags:
        - bluetooth
        - airplay
        - spotify
        - snapcast
      become: true
      ansible.builtin.copy:
        dest: /etc/NetworkManager/conf.d/default-wifi-powersave-off.conf
        content: |
          [connection]
          wifi.powersave = 2
        mode: "0600"
    - name: Reboot
      tags:
        - bluetooth
        - airplay
        - spotify
        - snapcast
      become: true
      ansible.builtin.reboot:
